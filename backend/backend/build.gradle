plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}


jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.4'
	implementation 'org.postgresql:postgresql:42.2.10'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.jsonwebtoken:jjwt:0.2'
	implementation "javax.xml.bind:jaxb-api:2.2.11"
	
	testImplementation "org.springframework.security:spring-security-config"
	testImplementation 'org.hamcrest:hamcrest:2.2'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
    runtimeOnly 'org.postgresql:postgresql:42.2.10'
	testImplementation "org.springframework.boot:spring-boot-starter-security"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation("org.junit.jupiter:junit-jupiter:5.9.2")
    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

test {
	useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
	 reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}